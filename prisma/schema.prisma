// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WaitList {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  @@map("wait_list")
}

model  Cards {
  id           Int     @id @default(autoincrement())
  title        String  @unique
  description  String
  img          String
  story        String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

}

model User {
//   id    Int     @id @default(autoincrement())
id        String @id @default(uuid())
email     String @unique
name      String?
password  String
createdAt DateTime @default(now())
updatedAt DateTime @default(now()) @updatedAt
createdComment Comment[] 
//   posts Post[]
}

model Comment {
id        String @id @default(uuid())
title     String?
body      String
createdAt DateTime @default(now())
updatedAt DateTime @default(now()) @updatedAt
user      User @relation(fields: [userId], references: [id])
userId String
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt  
//   title     String
//   content   String?
//   published Boolean  @default(false)
//   viewCount Int      @default(0)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }


// model User {
//   id    Int    @id @default(autoincrement())
//   email String @unique
//   name  String
//   posts Post[]
// }

// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String
//   published Boolean
//   user      User    @relation(fields: [userId], references: [id])
//   userId    Int
// }